---
- name: Set up lllm environment
  hosts: all
  become: no
  vars_files:
    - sudo.yml
  tasks:
    - name: Install apt package build-essential
      become: yes
      ansible.builtin.apt:
        name: build-essential
        state: present
        update_cache: yes

    - name: Install apt package cmake
      become: yes
      ansible.builtin.apt:
        name: cmake
        state: present

    - name: Install OpenMPI library
      become: yes
      ansible.builtin.apt:
        name: libopenmpi-dev
        state: present

    - name: Install git-lfs
      become: yes
      ansible.builtin.apt:
        name: git-lfs
        state: present

    - name: Check if lllm repository exists
      ansible.builtin.stat:
        path: "{{ lookup('env', 'HOME') }}/lllm"
      register: lllm_repository

    - name: Add github.com to known_hosts
      ansible.builtin.known_hosts:
        name: github.com
        key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
        state: present
        path: "{{ lookup('env', 'HOME') }}/.ssh/known_hosts"

    - name: Clone lllm repository
      ansible.builtin.git:
        repo: https://github.com/catid/lllm
        dest: "{{ lookup('env', 'HOME') }}/lllm"
        update: "{{ lllm_repository.stat.exists }}"
        update: yes

    - name: Initialize git-lfs
      shell: |
        cd "{{ lookup('env', 'HOME') }}/lllm"
        git lfs install

    - name: Check if lllm conda environment exists
      ansible.builtin.shell:
        cmd: "{{ lookup('env', 'HOME') }}/mambaforge/bin/conda env list | grep lllm"
      register: conda_env_output
      ignore_errors: true

    - name: Create lllm conda environment and install dependencies
      block:
        - name: Create conda environment
          ansible.builtin.shell:
            cmd: "{{ lookup('env', 'HOME') }}/mambaforge/bin/conda create -y --name lllm python=3.10"
      when: conda_env_output.rc != 0

    - name: Install PyTorch
      shell: |
        "{{ lookup('env', 'HOME') }}/mambaforge/envs/lllm/bin/pip3" install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu124

    - name: Install pip requirements.txt
      shell: |
        cd "{{ lookup('env', 'HOME') }}/lllm"
        "{{ lookup('env', 'HOME') }}/mambaforge/envs/lllm/bin/pip" install -U -r requirements.txt

    - name: Build C++ dataloader
      shell: |
        cd "{{ lookup('env', 'HOME') }}/lllm/dataset/package"
        rm -rf build dist cpp_dataloader.egg-info
        "{{ lookup('env', 'HOME') }}/mambaforge/envs/lllm/bin/python" -m build

    - name: Install C++ dataloader
      shell: |
        cd "{{ lookup('env', 'HOME') }}/lllm/dataset/package"
        "{{ lookup('env', 'HOME') }}/mambaforge/envs/lllm/bin/pip" install --force-reinstall "{{ lookup('env', 'HOME') }}/lllm/dataset/package/dist/cpp_dataloader-0.1.0-cp310-cp310-linux_x86_64.whl"
